# Generated by Django 5.0 on 2023-12-28 09:16

import api.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Name')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Batch Name')),
                ('start_date', models.DateField(verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, verbose_name='End date')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Department Name')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(default='', max_length=50, verbose_name='File Name')),
                ('path', models.FileField(upload_to='F:\\PRO\\Git_Repository\\st-augustine-college\\Backend\\staticfiles\\files')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Program Name')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Subject Name')),
            ],
        ),
        migrations.CreateModel(
            name='Head',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, max_length=255, null=True, upload_to=api.models.head_file_path, verbose_name='Profile Image')),
                ('head_id', models.CharField(max_length=50, verbose_name='Head ID')),
                ('role', models.CharField(blank=True, max_length=50, null=True, verbose_name='Head Role')),
                ('date_enrolled', models.DateField(blank=True, verbose_name='Enrollment Date')),
                ('gender', models.CharField(max_length=10, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date Of Birth')),
                ('contact', models.CharField(max_length=20, verbose_name='Phone No')),
                ('address', models.CharField(max_length=100, verbose_name='Address')),
                ('pob', models.CharField(max_length=50, verbose_name='Home City/Town')),
                ('region', models.CharField(max_length=50, verbose_name='Region')),
                ('nationality', models.CharField(max_length=50, verbose_name='Nationality')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('head_id', 'gender', 'dob', 'contact', 'address')},
            },
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Class Name')),
                ('students_year', models.IntegerField(default=1, verbose_name='Students Year')),
                ('is_active', models.BooleanField(default=True, verbose_name='Class is Active')),
                ('academic_years', models.ManyToManyField(to='api.academicyear', verbose_name='Academic Years')),
                ('program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.program', verbose_name='Students Program')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, max_length=255, null=True, upload_to=api.models.staff_file_path, verbose_name='Profile Image')),
                ('staff_id', models.CharField(default='not set', max_length=50, verbose_name='Staff ID')),
                ('role', models.CharField(default='teacher', max_length=50, verbose_name='Staff Role')),
                ('date_enrolled', models.DateField(verbose_name='Enrollment Date')),
                ('gender', models.CharField(default='not set', max_length=10, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date Of Birth')),
                ('contact', models.CharField(default='not set', max_length=20, verbose_name='Phone No')),
                ('address', models.CharField(default='not set', max_length=100, verbose_name='Address')),
                ('pob', models.CharField(default='not set', max_length=50, verbose_name='Home City/Town')),
                ('region', models.CharField(default='not set', max_length=50, verbose_name='Region')),
                ('nationality', models.CharField(default='not set', max_length=50, verbose_name='Nationality')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staff_department', to='api.department', verbose_name='Department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subjects', models.ManyToManyField(to='api.subject', verbose_name='Subject(s) taught')),
            ],
            options={
                'unique_together': {('staff_id', 'gender', 'dob', 'contact', 'address')},
            },
        ),
        migrations.AddField(
            model_name='department',
            name='hod',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='department_hod', to='api.staff', verbose_name='HOD'),
        ),
        migrations.AddField(
            model_name='department',
            name='teachers',
            field=models.ManyToManyField(blank=True, related_name='department_teachers', to='api.staff', verbose_name='Teachers'),
        ),
        migrations.CreateModel(
            name='StaffNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500, verbose_name='Message')),
                ('date_time', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('send_to', models.ManyToManyField(related_name='send_to', to='api.staff', verbose_name='Sent To')),
                ('sent_by_head', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.head', verbose_name='HEAD')),
                ('sent_by_hod', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.staff', verbose_name='HOD')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_year', models.IntegerField(default=1, verbose_name='Current Year')),
                ('date_enrolled', models.DateField(verbose_name='Enrollment Date')),
                ('graduation', models.DateField(verbose_name='Year Of Graduation')),
                ('has_graduated', models.BooleanField(default=False, verbose_name='Has Graduated')),
                ('st_id', models.CharField(max_length=50, null=True, verbose_name='Student ID.')),
                ('index_no', models.CharField(default='not assigned yet', max_length=20, verbose_name='Index No.')),
                ('img', models.ImageField(blank=True, max_length=255, null=True, upload_to=api.models.students_file_path, verbose_name='Profile Image')),
                ('gender', models.CharField(max_length=10, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date Of Birth')),
                ('contact', models.CharField(default='not set', max_length=20, verbose_name='Phone No')),
                ('address', models.CharField(default='not set', max_length=100, verbose_name='Address')),
                ('pob', models.CharField(default='not set', max_length=50, verbose_name='Home City/Town')),
                ('region', models.CharField(default='not set', max_length=50, verbose_name='Region')),
                ('nationality', models.CharField(default='not set', max_length=50, verbose_name='Nationality')),
                ('guardian', models.CharField(default='not set', max_length=100, verbose_name='Guardian')),
                ('guardian_gender', models.CharField(max_length=100, verbose_name='Guardian Gender')),
                ('guardian_email', models.CharField(default='not set', max_length=100, verbose_name='Guardian Email')),
                ('guardian_occupation', models.CharField(default='not set', max_length=50, verbose_name='Occupation of guardian')),
                ('guardian_nationality', models.CharField(default='not set', max_length=50, verbose_name='Nationality of Guardian')),
                ('guardian_contact', models.CharField(default='not set', max_length=10, verbose_name='Phone no. of guardian')),
                ('guardian_address', models.CharField(default='not set', max_length=100, verbose_name='Address of guardian')),
                ('academic_years', models.ManyToManyField(to='api.academicyear', verbose_name='Academic Years')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.batch', verbose_name='Batch')),
                ('program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.program', verbose_name='Program')),
                ('st_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.classe', verbose_name='Class')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='classe',
            name='students',
            field=models.ManyToManyField(blank=True, to='api.student', verbose_name='Students'),
        ),
        migrations.AddField(
            model_name='program',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='api.subject', verbose_name='Subjects'),
        ),
        migrations.AddField(
            model_name='department',
            name='subjects',
            field=models.ManyToManyField(to='api.subject', verbose_name='Subjects'),
        ),
        migrations.AddField(
            model_name='classe',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='api.subject', verbose_name='Subjects'),
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_term', models.IntegerField(verbose_name='Term')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name="Student's Score")),
                ('academic_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.academicyear', verbose_name='Academic Year')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.staff', verbose_name='Uploaded By')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.student', verbose_name='Student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.subject', verbose_name='Subject')),
            ],
            options={
                'unique_together': {('student', 'subject', 'academic_year', 'academic_term', 'teacher')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='classe',
            unique_together={('name', 'students_year', 'program')},
        ),
        migrations.CreateModel(
            name='SubjectAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_term', models.IntegerField(default=1, verbose_name='Academic Term')),
                ('academic_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.academicyear', verbose_name='Academic Year')),
                ('hod', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hod', to='api.staff', verbose_name='Assigned By')),
                ('students_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.classe', verbose_name='Students Class')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.subject', verbose_name='Subject')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.staff', verbose_name='Taught by')),
            ],
            options={
                'unique_together': {('subject', 'teacher', 'students_class', 'academic_year', 'academic_term')},
            },
        ),
    ]
