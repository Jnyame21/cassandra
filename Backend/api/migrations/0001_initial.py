# Generated by Django 5.0 on 2024-10-12 09:22

import api.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYearDivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Academic Year Division Name')),
            ],
        ),
        migrations.CreateModel(
            name='EducationalLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, verbose_name='Level Name')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(default='', max_length=50, verbose_name='File Name')),
                ('path', models.FileField(upload_to='F:\\PRO\\Git_Repository\\cassandra\\Backend\\staticfiles\\files')),
            ],
        ),
        migrations.CreateModel(
            name='KnustProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Program Name')),
                ('degree', models.CharField(max_length=500, verbose_name='Degree')),
                ('cut_off_point', models.CharField(blank=True, max_length=500, null=True, verbose_name='Cut-off point')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='School Name')),
                ('code', models.CharField(blank=True, max_length=10, null=True, verbose_name='School Code')),
                ('sch_logo', models.ImageField(blank=True, max_length=255, null=True, upload_to=api.models.school_image_path, verbose_name='School Logo')),
                ('head_name', models.CharField(default='not set', max_length=20, verbose_name="Head Master/Mistress's Name")),
                ('head_signature', models.ImageField(blank=True, max_length=255, null=True, upload_to=api.models.school_image_path, verbose_name="Head Master/Mistress's Signature")),
                ('semesters', models.BooleanField(default=True, verbose_name='Semester System')),
                ('address', models.CharField(default='not set', max_length=100, verbose_name='School Address')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='School Short Name')),
                ('contact', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('has_departments', models.BooleanField(default=True, verbose_name='Does the school has departments?')),
                ('has_programs', models.BooleanField(default=True, verbose_name='Does the school has programs?')),
                ('students_id', models.BooleanField(default=False, verbose_name='Does the school give student ID numbers?')),
                ('students_index_no', models.BooleanField(default=False, verbose_name='Does the school give student Index numbers?')),
                ('staff_id', models.BooleanField(default=False, verbose_name='Does the school give staff ID numbers?')),
                ('all_teachers_attendance', models.BooleanField(default=False, verbose_name='Does the school require all teachers to do attendance?')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('delete_staff', models.BooleanField(default=True, verbose_name='Admin To Delete Staff')),
                ('delete_class', models.BooleanField(default=True, verbose_name='Admin To Delete Class')),
                ('date_created', models.DateField(default=django.utils.timezone.now, max_length=20, verbose_name='Date Created')),
            ],
        ),
        migrations.CreateModel(
            name='UCCProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Program Name')),
                ('degree', models.CharField(max_length=500, verbose_name='Degree')),
                ('cut_off_point_male', models.CharField(blank=True, max_length=500, null=True, verbose_name='Cut-off point for males')),
                ('cut_off_point_female', models.CharField(blank=True, max_length=500, null=True, verbose_name='Cut-off point for females')),
            ],
        ),
        migrations.CreateModel(
            name='UGProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Program Name')),
                ('degree', models.CharField(max_length=500, verbose_name='Degree')),
                ('cut_off_point_choice_1', models.CharField(blank=True, max_length=500, null=True, verbose_name='First choice cut-off point')),
                ('cut_off_point_choice_2', models.CharField(blank=True, max_length=500, null=True, verbose_name='Second choice cut-off point')),
                ('subject_requirement', models.CharField(blank=True, max_length=500, null=True, verbose_name='Subject requirement')),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Name of University ')),
                ('aka', models.CharField(max_length=500, verbose_name='Short Name')),
            ],
        ),
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('term_1_end_date', models.DateField(null=True, verbose_name='Term 1 End Date')),
                ('term_2_start_date', models.DateField(null=True, verbose_name='Term 2 Start Date')),
                ('term_2_end_date', models.DateField(null=True, verbose_name='Term 2 End Date')),
                ('term_3_start_date', models.DateField(blank=True, null=True, verbose_name='Term 3 Start Date')),
                ('term_3_end_date', models.DateField(blank=True, null=True, verbose_name='Term 3 End Date')),
                ('date_created', models.DateField(default=django.utils.timezone.now, verbose_name='Date Created')),
                ('period_division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.academicyeardivision', verbose_name='Academic Year Division')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.school', verbose_name='School')),
            ],
        ),
        migrations.CreateModel(
            name='Head',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, max_length=255, null=True, upload_to=api.models.head_file_path, verbose_name='Profile Image')),
                ('head_id', models.CharField(max_length=50, null=True, verbose_name='Head ID')),
                ('role', models.CharField(blank=True, max_length=50, null=True, verbose_name='Head Role')),
                ('date_enrolled', models.DateField(blank=True, null=True, verbose_name='Enrollment Date')),
                ('gender', models.CharField(default='none', max_length=10, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date Of Birth')),
                ('contact', models.CharField(default='none', max_length=20, verbose_name='Phone No')),
                ('alt_contact', models.CharField(blank=True, default='none', max_length=15, null=True, verbose_name='Alternate Phone No')),
                ('address', models.CharField(default='none', max_length=100, verbose_name='Address')),
                ('pob', models.CharField(default='none', max_length=50, verbose_name='Home City/Town')),
                ('region', models.CharField(default='none', max_length=50, verbose_name='Region')),
                ('nationality', models.CharField(default='GHANAIAN', max_length=50, verbose_name='Nationality')),
                ('date_created', models.DateField(default=django.utils.timezone.now, max_length=20, verbose_name='Date Created')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.educationallevel', verbose_name='Educational Level')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.school', verbose_name='School')),
            ],
            options={
                'unique_together': {('head_id', 'school')},
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Program Name')),
                ('date_created', models.DateField(default=django.utils.timezone.now, max_length=20, verbose_name='Date Created')),
                ('schools', models.ManyToManyField(blank=True, to='api.school', verbose_name='Schools')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Department Name')),
                ('date_created', models.DateField(default=django.utils.timezone.now, max_length=20, verbose_name='Date Created')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.school', verbose_name='School')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, max_length=255, null=True, upload_to=api.models.staff_file_path, verbose_name='Profile Image')),
                ('staff_id', models.CharField(max_length=50, null=True, verbose_name='Staff ID')),
                ('role', models.CharField(default='teacher', max_length=50, verbose_name='Staff Role')),
                ('date_enrolled', models.DateField(blank=True, null=True, verbose_name='Enrollment Date')),
                ('gender', models.CharField(default='none', max_length=10, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date Of Birth')),
                ('contact', models.CharField(default='none', max_length=20, verbose_name='Phone No')),
                ('alt_contact', models.CharField(blank=True, default='none', max_length=15, null=True, verbose_name='Alternate Phone No')),
                ('address', models.CharField(default='none', max_length=100, verbose_name='Address')),
                ('pob', models.CharField(default='none', max_length=50, verbose_name='Home City/Town')),
                ('region', models.CharField(default='none', max_length=50, verbose_name='Region')),
                ('nationality', models.CharField(default='GHANAIAN', max_length=50, verbose_name='Nationality')),
                ('date_created', models.DateField(default=django.utils.timezone.now, max_length=20, verbose_name='Date Created')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staff_department', to='api.department', verbose_name='Department')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.educationallevel', verbose_name='Educational Level')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.school', verbose_name='School')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='hod',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='department_hod', to='api.staff', verbose_name='HOD'),
        ),
        migrations.AddField(
            model_name='department',
            name='teachers',
            field=models.ManyToManyField(blank=True, related_name='department_teachers', to='api.staff', verbose_name='Teachers'),
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Class Name')),
                ('students_year', models.IntegerField(default=1, verbose_name='Students Year')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Completion Date')),
                ('date_enrolled', models.DateField(null=True, verbose_name='Enrollment Date')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Class is Active')),
                ('academic_years', models.ManyToManyField(to='api.academicyear', verbose_name='Academic Years')),
                ('students_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.educationallevel', verbose_name='Students Level')),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.program', verbose_name='Students Program')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.school', verbose_name='School')),
                ('head_teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.staff', verbose_name='Head Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_year', models.IntegerField(default=1, verbose_name='Current Year')),
                ('date_enrolled', models.DateField(verbose_name='Enrollment Date')),
                ('has_completed', models.BooleanField(default=False, verbose_name='Has Completed')),
                ('st_id', models.CharField(max_length=50, null=True, verbose_name='Student ID.')),
                ('index_no', models.CharField(default='none', max_length=20, verbose_name='Index No.')),
                ('img', models.ImageField(blank=True, max_length=255, null=True, upload_to=api.models.students_file_path, verbose_name='Profile Image')),
                ('gender', models.CharField(max_length=10, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date Of Birth')),
                ('contact', models.CharField(default='none', max_length=20, verbose_name='Phone No')),
                ('alt_contact', models.CharField(blank=True, default='none', max_length=15, null=True, verbose_name='Alternate Phone No')),
                ('address', models.CharField(default='none', max_length=100, verbose_name='Address')),
                ('religion', models.CharField(default='none', max_length=50, verbose_name='Religion')),
                ('pob', models.CharField(default='none', max_length=50, verbose_name='Home City/Town')),
                ('region', models.CharField(default='none', max_length=50, verbose_name='Region')),
                ('nationality', models.CharField(default='GHANAIAN', max_length=50, verbose_name='Nationality')),
                ('guardian_first_name', models.CharField(default='none', max_length=100, verbose_name='Guardian First Name')),
                ('guardian_last_name', models.CharField(default='none', max_length=100, verbose_name='Guardian Last Name')),
                ('guardian_gender', models.CharField(default='none', max_length=100, verbose_name='Guardian Gender')),
                ('guardian_email', models.CharField(default='none', max_length=100, verbose_name='Guardian Email')),
                ('guardian_occupation', models.CharField(default='none', max_length=50, verbose_name='Occupation of guardian')),
                ('guardian_nationality', models.CharField(default='GHANAIAN', max_length=50, verbose_name='Nationality of Guardian')),
                ('guardian_contact', models.CharField(default='none', max_length=10, verbose_name='Phone no. of guardian')),
                ('guardian_address', models.CharField(default='none', max_length=100, verbose_name='Address of guardian')),
                ('date_created', models.DateField(default=django.utils.timezone.now, max_length=20, verbose_name='Date Created')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.educationallevel', verbose_name='Educational Level')),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.program', verbose_name='Program')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.school', verbose_name='School')),
                ('st_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.classe', verbose_name='Class')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('st_id', 'school')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500, verbose_name='Message')),
                ('date_time', models.DateTimeField(auto_now_add=True, verbose_name='At')),
                ('from_head', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_head', to='api.head', verbose_name='From Head')),
                ('from_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_staff', to='api.staff', verbose_name='From Staff')),
                ('to_staff', models.ManyToManyField(related_name='to_staff', to='api.staff', verbose_name='To Staff')),
                ('from_student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_student', to='api.student', verbose_name='From Student')),
                ('to_student', models.ManyToManyField(related_name='to_student', to='api.student', verbose_name='To Student')),
            ],
        ),
        migrations.AddField(
            model_name='classe',
            name='students',
            field=models.ManyToManyField(blank=True, to='api.student', verbose_name='Students'),
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Subject Name')),
                ('date_created', models.DateField(default=django.utils.timezone.now, max_length=20, verbose_name='Date Created')),
                ('schools', models.ManyToManyField(blank=True, to='api.school', verbose_name='Schools')),
            ],
        ),
        migrations.AddField(
            model_name='staff',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='api.subject', verbose_name='Subject(s) taught'),
        ),
        migrations.AddField(
            model_name='program',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='api.subject', verbose_name='Subjects'),
        ),
        migrations.AddField(
            model_name='department',
            name='subjects',
            field=models.ManyToManyField(to='api.subject', verbose_name='Subjects'),
        ),
        migrations.AddField(
            model_name='classe',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='api.subject', verbose_name='Subjects'),
        ),
        migrations.CreateModel(
            name='StudentAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_term', models.IntegerField(verbose_name='Term')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Attendance Date')),
                ('academic_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.academicyear', verbose_name='Academic Year')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.school', verbose_name='School')),
                ('students_absent', models.ManyToManyField(related_name='students_absent', to='api.student', verbose_name='Students Absent')),
                ('students_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.classe', verbose_name='Students Class')),
                ('students_present', models.ManyToManyField(related_name='students_present', to='api.student', verbose_name='Students Present')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.staff', verbose_name='Uploaded By')),
            ],
            options={
                'unique_together': {('school', 'academic_year', 'academic_term', 'teacher', 'date', 'students_class')},
            },
        ),
        migrations.CreateModel(
            name='StudentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_term', models.IntegerField(verbose_name='Term')),
                ('exam_percentage', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Percentage Of Exams')),
                ('exam_score', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name="Students's Exam Score")),
                ('total_assessment_percentage', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Percentage Of Assessments')),
                ('total_assessment_score', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name="Total Students's Assessment Score")),
                ('result', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Result')),
                ('grade', models.CharField(max_length=10, null=True, verbose_name="Student's Grade")),
                ('remark', models.CharField(max_length=20, null=True, verbose_name='Remark')),
                ('created_at', models.DateField(default=django.utils.timezone.now, max_length=20, verbose_name='Date Created')),
                ('updated_at', models.DateField(auto_now=True, null=True, verbose_name='Date Created')),
                ('academic_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.academicyear', verbose_name='Academic Year')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.school', verbose_name='School')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.student', verbose_name='Student')),
                ('student_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.classe', verbose_name='Student Class')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.staff', verbose_name='Uploaded By')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.subject', verbose_name='Subject')),
            ],
            options={
                'unique_together': {('student', 'subject', 'academic_year', 'academic_term', 'teacher')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='staff',
            unique_together={('staff_id', 'school')},
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_term', models.IntegerField(verbose_name='Term')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name="Student's Score")),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Exam Percentage')),
                ('date_created', models.DateField(default=django.utils.timezone.now, max_length=20, verbose_name='Date Created')),
                ('academic_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.academicyear', verbose_name='Academic Year')),
                ('student_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.classe', verbose_name='Student Class')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.school', verbose_name='School')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.staff', verbose_name='Uploaded By')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.student', verbose_name='Student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.subject', verbose_name='Subject')),
            ],
            options={
                'unique_together': {('student', 'subject', 'academic_year', 'academic_term', 'teacher')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='classe',
            unique_together={('name', 'students_year', 'program', 'school')},
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_term', models.IntegerField(verbose_name='Term')),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name="Student's Score")),
                ('total_score', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Total Assessment Score')),
                ('percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Assessment Percentage')),
                ('title', models.CharField(default='title', max_length=50, verbose_name='Title Of Assessment')),
                ('description', models.CharField(blank=True, default='', max_length=100, verbose_name='Assessment description')),
                ('comment', models.CharField(blank=True, default='', max_length=100, verbose_name='Comment')),
                ('assessment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Date the assessment was conducted')),
                ('created_at', models.DateField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('updated_at', models.DateField(auto_now=True, null=True, verbose_name='Date Created')),
                ('academic_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.academicyear', verbose_name='Academic Year')),
                ('student_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.classe', verbose_name='Student Class')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.school', verbose_name='School')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.staff', verbose_name='Uploaded By')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.student', verbose_name='Student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.subject', verbose_name='Subject')),
            ],
            options={
                'unique_together': {('student', 'subject', 'academic_year', 'academic_term', 'teacher', 'title')},
            },
        ),
        migrations.CreateModel(
            name='SubjectAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_term', models.IntegerField(default=1, verbose_name='Academic Term')),
                ('date_created', models.DateField(default=django.utils.timezone.now, max_length=20, verbose_name='Date Created')),
                ('academic_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.academicyear', verbose_name='Academic Year')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_by', to='api.staff', verbose_name='Assigned By')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.school', verbose_name='School')),
                ('students_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.classe', verbose_name='Students Class')),
                ('subjects', models.ManyToManyField(to='api.subject', verbose_name='Subject(s)')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.staff', verbose_name='Taught by')),
            ],
            options={
                'unique_together': {('teacher', 'students_class', 'academic_year', 'academic_term')},
            },
        ),
    ]
